from typing import Any, List, Optional, Type, TypeVar

from django.db import models
from simple_history.models import HistoricalRecords
from simple_history.utils import (
    get_change_reason_from_object as get_change_reason_from_object,
)

M = TypeVar("M", bound=models.Model)

class HistoryDescriptor:
    model: Any = ...
    def __init__(self, model: Type[M]) -> None: ...
    def __get__(self, instance: M, owner: Any) -> "HistoryManager[M]": ...

class HistoryManager(models.Manager[M]):
    model: Type[M] = ...
    instance: M = ...
    def __init__(self, model: Any, instance: Optional[Any] = ...) -> None: ...
    def get_super_queryset(self) -> models.QuerySet[M]: ...
    def get_queryset(self) -> models.QuerySet[M]: ...
    def most_recent(self) -> M: ...
    def as_of(self, date: Any) -> M: ...
    def bulk_history_create(
        self,
        objs: Any,
        batch_size: Optional[Any] = ...,
        update: bool = ...,
        default_user: Optional[Any] = ...,
        default_change_reason: str = ...,
    ) -> List[M]: ...
