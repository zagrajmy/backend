from typing import Any, Optional

def noneimplementation(meth: Any) -> None: ...

class JobError(Exception): ...

class BaseJob:
    help: str = ...
    when: Optional[str] = ...
    def execute(self) -> None: ...

class MinutelyJob(BaseJob):
    when: str = ...

class QuarterHourlyJob(BaseJob):
    when: str = ...

class HourlyJob(BaseJob):
    when: str = ...

class DailyJob(BaseJob):
    when: str = ...

class WeeklyJob(BaseJob):
    when: str = ...

class MonthlyJob(BaseJob):
    when: str = ...

class YearlyJob(BaseJob):
    when: str = ...

def my_import(name: Any): ...
def find_jobs(jobs_dir: Any): ...
def find_job_module(app_name: Any, when: Optional[Any] = ...): ...
def import_job(app_name: Any, name: Any, when: Optional[Any] = ...): ...
def get_jobs(when: Optional[Any] = ..., only_scheduled: bool = ...): ...
def get_job(app_name: Any, job_name: Any): ...
def print_jobs(
    when: Optional[Any] = ...,
    only_scheduled: bool = ...,
    show_when: bool = ...,
    show_appname: bool = ...,
    show_header: bool = ...,
) -> None: ...
