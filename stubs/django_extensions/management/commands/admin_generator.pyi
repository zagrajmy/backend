from typing import Any

from django.core.management.base import LabelCommand
from django_extensions.management.utils import signalcommand as signalcommand

MAX_LINE_WIDTH: Any
INDENT_WIDTH: Any
LIST_FILTER_THRESHOLD: Any
RAW_ID_THRESHOLD: Any
LIST_FILTER: Any
SEARCH_FIELD_NAMES: Any
DATE_HIERARCHY_NAMES: Any
PREPOPULATED_FIELD_NAMES: Any
PRINT_IMPORTS: Any
PRINT_ADMIN_CLASS: Any
PRINT_ADMIN_PROPERTY: Any

class UnicodeMixin: ...

class AdminApp(UnicodeMixin):
    app_config: Any = ...
    model_res: Any = ...
    options: Any = ...
    def __init__(self, app_config: Any, model_res: Any, **options: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __unicode__(self): ...

class AdminModel(UnicodeMixin):
    PRINTABLE_PROPERTIES: Any = ...
    model: Any = ...
    list_display: Any = ...
    list_filter: Any = ...
    raw_id_fields: Any = ...
    search_fields: Any = ...
    prepopulated_fields: Any = ...
    date_hierarchy: Any = ...
    search_field_names: Any = ...
    raw_id_threshold: Any = ...
    list_filter_threshold: Any = ...
    date_hierarchy_names: Any = ...
    prepopulated_field_names: Any = ...
    def __init__(
        self,
        model: Any,
        raw_id_threshold: Any = ...,
        list_filter_threshold: Any = ...,
        search_field_names: Any = ...,
        date_hierarchy_names: Any = ...,
        prepopulated_field_names: Any = ...,
        **options: Any,
    ) -> None: ...
    @property
    def name(self): ...
    def __unicode__(self): ...

class Command(LabelCommand):
    help: str = ...
    can_import_settings: bool = ...
    def add_arguments(self, parser: Any) -> None: ...
    def handle(self, *args: Any, **options: Any) -> None: ...
