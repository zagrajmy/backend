from typing import Any

from django.core.management.base import BaseCommand
from django_extensions.management.debug_cursor import (
    monkey_patch_cursordebugwrapper as monkey_patch_cursordebugwrapper,
)
from django_extensions.management.technical_response import (
    null_technical_500_response as null_technical_500_response,
)
from django_extensions.management.utils import RedirectHandler as RedirectHandler
from django_extensions.management.utils import has_ipdb as has_ipdb
from django_extensions.management.utils import setup_logger as setup_logger
from django_extensions.management.utils import signalcommand as signalcommand

USE_STATICFILES: bool

def gen_filenames(): ...

naiveip_re: Any
DEFAULT_PORT: str
DEFAULT_POLLER_RELOADER_INTERVAL: Any
DEFAULT_POLLER_RELOADER_TYPE: Any
logger: Any

class Command(BaseCommand):
    help: str = ...
    requires_system_checks: bool = ...
    DEFAULT_CRT_EXTENSION: str = ...
    DEFAULT_KEY_EXTENSION: str = ...
    def add_arguments(self, parser: Any) -> None: ...
    show_startup_messages: Any = ...
    use_ipv6: Any = ...
    addr: str = ...
    port: Any = ...
    def handle(self, *args: Any, **options: Any) -> None: ...
    nopin: Any = ...
    def inner_run(self, options: Any): ...
    @classmethod
    def determine_ssl_files_paths(cls, options: Any): ...

def set_werkzeug_log_color(): ...
