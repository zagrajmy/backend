from typing import Any, Optional

class NoControlCharactersValidator:
    message: Any = ...
    code: str = ...
    whitelist: Any = ...
    def __init__(
        self,
        message: Optional[Any] = ...,
        code: Optional[Any] = ...,
        whitelist: Optional[Any] = ...,
    ) -> None: ...
    def __call__(self, value: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...

class NoWhitespaceValidator:
    message: Any = ...
    code: str = ...
    def __init__(
        self,
        message: Optional[Any] = ...,
        code: Optional[Any] = ...,
        whitelist: Optional[Any] = ...,
    ) -> None: ...
    def __call__(self, value: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...

class HexValidator:
    messages: Any = ...
    code: str = ...
    length: Any = ...
    min_length: Any = ...
    max_length: Any = ...
    message: Any = ...
    def __init__(
        self,
        length: Optional[Any] = ...,
        min_length: Optional[Any] = ...,
        max_length: Optional[Any] = ...,
        message: Optional[Any] = ...,
        code: Optional[Any] = ...,
    ) -> None: ...
    def __call__(self, value: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
